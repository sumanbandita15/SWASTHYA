'use strict';var cov_1375786svd=function(){var path="C:\\Users\\suman\\Desktop\\Swasthya\\server\\routes\\users.js",hash="be7aaedd70881c6ded483b2c694757cb6117db7c",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"C:\\Users\\suman\\Desktop\\Swasthya\\server\\routes\\users.js",statementMap:{"0":{start:{line:3,column:16},end:{line:3,column:34}},"1":{start:{line:4,column:13},end:{line:4,column:38}},"2":{start:{line:6,column:15},end:{line:6,column:31}},"3":{start:{line:9,column:0},end:{line:97,column:3}},"4":{start:{line:11,column:25},end:{line:11,column:69}},"5":{start:{line:13,column:23},end:{line:13,column:73}},"6":{start:{line:13,column:52},end:{line:13,column:72}},"7":{start:{line:14,column:2},end:{line:18,column:3}},"8":{start:{line:15,column:16},end:{line:15,column:70}},"9":{start:{line:16,column:4},end:{line:16,column:21}},"10":{start:{line:17,column:4},end:{line:17,column:21}},"11":{start:{line:20,column:23},end:{line:20,column:68}},"12":{start:{line:21,column:25},end:{line:23,column:3}},"13":{start:{line:22,column:13},end:{line:22,column:69}},"14":{start:{line:25,column:2},end:{line:29,column:3}},"15":{start:{line:26,column:16},end:{line:26,column:75}},"16":{start:{line:27,column:4},end:{line:27,column:21}},"17":{start:{line:28,column:4},end:{line:28,column:21}},"18":{start:{line:32,column:33},end:{line:32,column:54}},"19":{start:{line:33,column:26},end:{line:35,column:3}},"20":{start:{line:34,column:13},end:{line:34,column:55}},"21":{start:{line:37,column:2},end:{line:41,column:3}},"22":{start:{line:38,column:16},end:{line:38,column:92}},"23":{start:{line:39,column:4},end:{line:39,column:21}},"24":{start:{line:40,column:4},end:{line:40,column:21}},"25":{start:{line:44,column:22},end:{line:47,column:3}},"26":{start:{line:49,column:24},end:{line:52,column:3}},"27":{start:{line:50,column:13},end:{line:51,column:60}},"28":{start:{line:53,column:2},end:{line:58,column:3}},"29":{start:{line:54,column:16},end:{line:54,column:46}},"30":{start:{line:55,column:16},end:{line:55,column:94}},"31":{start:{line:56,column:4},end:{line:56,column:21}},"32":{start:{line:57,column:4},end:{line:57,column:21}},"33":{start:{line:60,column:24},end:{line:63,column:3}},"34":{start:{line:61,column:13},end:{line:62,column:60}},"35":{start:{line:65,column:2},end:{line:70,column:3}},"36":{start:{line:66,column:16},end:{line:66,column:46}},"37":{start:{line:67,column:16},end:{line:67,column:93}},"38":{start:{line:68,column:4},end:{line:68,column:21}},"39":{start:{line:69,column:4},end:{line:69,column:21}},"40":{start:{line:73,column:58},end:{line:73,column:66}},"41":{start:{line:74,column:2},end:{line:74,column:31}},"42":{start:{line:75,column:2},end:{line:75,column:29}},"43":{start:{line:77,column:2},end:{line:96,column:7}},"44":{start:{line:79,column:22},end:{line:84,column:7}},"45":{start:{line:85,column:6},end:{line:85,column:34}},"46":{start:{line:88,column:6},end:{line:88,column:78}},"47":{start:{line:91,column:6},end:{line:94,column:7}},"48":{start:{line:92,column:8},end:{line:92,column:52}},"49":{start:{line:93,column:8},end:{line:93,column:25}},"50":{start:{line:95,column:6},end:{line:95,column:16}},"51":{start:{line:99,column:0},end:{line:99,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:17},end:{line:9,column:18}},loc:{start:{line:9,column:37},end:{line:97,column:1}},line:9},"1":{name:"(anonymous_1)",decl:{start:{line:13,column:43},end:{line:13,column:44}},loc:{start:{line:13,column:52},end:{line:13,column:72}},line:13},"2":{name:"(anonymous_2)",decl:{start:{line:22,column:4},end:{line:22,column:5}},loc:{start:{line:22,column:13},end:{line:22,column:69}},line:22},"3":{name:"(anonymous_3)",decl:{start:{line:34,column:4},end:{line:34,column:5}},loc:{start:{line:34,column:13},end:{line:34,column:55}},line:34},"4":{name:"(anonymous_4)",decl:{start:{line:50,column:4},end:{line:50,column:5}},loc:{start:{line:50,column:13},end:{line:51,column:60}},line:50},"5":{name:"(anonymous_5)",decl:{start:{line:61,column:4},end:{line:61,column:5}},loc:{start:{line:61,column:13},end:{line:62,column:60}},line:61},"6":{name:"(anonymous_6)",decl:{start:{line:78,column:10},end:{line:78,column:11}},loc:{start:{line:78,column:20},end:{line:86,column:5}},line:78},"7":{name:"(anonymous_7)",decl:{start:{line:87,column:10},end:{line:87,column:11}},loc:{start:{line:87,column:20},end:{line:89,column:5}},line:87},"8":{name:"(anonymous_8)",decl:{start:{line:90,column:11},end:{line:90,column:12}},loc:{start:{line:90,column:18},end:{line:96,column:5}},line:90}},branchMap:{"0":{loc:{start:{line:14,column:2},end:{line:18,column:3}},type:"if",locations:[{start:{line:14,column:2},end:{line:18,column:3}},{start:{line:14,column:2},end:{line:18,column:3}}],line:14},"1":{loc:{start:{line:22,column:13},end:{line:22,column:69}},type:"binary-expr",locations:[{start:{line:22,column:13},end:{line:22,column:30}},{start:{line:22,column:34},end:{line:22,column:69}}],line:22},"2":{loc:{start:{line:25,column:2},end:{line:29,column:3}},type:"if",locations:[{start:{line:25,column:2},end:{line:29,column:3}},{start:{line:25,column:2},end:{line:29,column:3}}],line:25},"3":{loc:{start:{line:37,column:2},end:{line:41,column:3}},type:"if",locations:[{start:{line:37,column:2},end:{line:41,column:3}},{start:{line:37,column:2},end:{line:41,column:3}}],line:37},"4":{loc:{start:{line:50,column:13},end:{line:51,column:60}},type:"binary-expr",locations:[{start:{line:50,column:13},end:{line:50,column:40}},{start:{line:51,column:6},end:{line:51,column:60}}],line:50},"5":{loc:{start:{line:53,column:2},end:{line:58,column:3}},type:"if",locations:[{start:{line:53,column:2},end:{line:58,column:3}},{start:{line:53,column:2},end:{line:58,column:3}}],line:53},"6":{loc:{start:{line:61,column:13},end:{line:62,column:60}},type:"binary-expr",locations:[{start:{line:61,column:13},end:{line:61,column:40}},{start:{line:62,column:6},end:{line:62,column:60}}],line:61},"7":{loc:{start:{line:65,column:2},end:{line:70,column:3}},type:"if",locations:[{start:{line:65,column:2},end:{line:70,column:3}},{start:{line:65,column:2},end:{line:70,column:3}}],line:65},"8":{loc:{start:{line:73,column:25},end:{line:73,column:39}},type:"default-arg",locations:[{start:{line:73,column:37},end:{line:73,column:39}}],line:73},"9":{loc:{start:{line:73,column:40},end:{line:73,column:53}},type:"default-arg",locations:[{start:{line:73,column:51},end:{line:73,column:53}}],line:73},"10":{loc:{start:{line:91,column:6},end:{line:94,column:7}},type:"if",locations:[{start:{line:91,column:6},end:{line:94,column:7}},{start:{line:91,column:6},end:{line:94,column:7}}],line:91}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0],"9":[0],"10":[0,0]},_coverageSchema:"d34fc3e6b8297bcde183f5492bcb8fcb36775295"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_1375786svd.s[0]++,require('express'));const User=(cov_1375786svd.s[1]++,require('../models/user'));const router=(cov_1375786svd.s[2]++,express.Router());/* ========== POST/CREATE AN USER ========== */cov_1375786svd.s[3]++;router.post('/',(req,res,next)=>{cov_1375786svd.f[0]++;const requiredFields=(cov_1375786svd.s[4]++,['firstName','lastName','email','password']);const missingField=(cov_1375786svd.s[5]++,requiredFields.find(field=>{cov_1375786svd.f[1]++;cov_1375786svd.s[6]++;return!(field in req.body);}));cov_1375786svd.s[7]++;if(missingField){cov_1375786svd.b[0][0]++;const err=(cov_1375786svd.s[8]++,new Error(`Missing '${missingField}' in request body`));cov_1375786svd.s[9]++;err.status=422;cov_1375786svd.s[10]++;return next(err);}else{cov_1375786svd.b[0][1]++;}const stringFields=(cov_1375786svd.s[11]++,['email','password','firstName','lastName']);const nonStringField=(cov_1375786svd.s[12]++,stringFields.find(field=>{cov_1375786svd.f[2]++;cov_1375786svd.s[13]++;return(cov_1375786svd.b[1][0]++,field in req.body)&&(cov_1375786svd.b[1][1]++,typeof req.body[field]!=='string');}));cov_1375786svd.s[14]++;if(nonStringField){cov_1375786svd.b[2][0]++;const err=(cov_1375786svd.s[15]++,new Error(`Field: '${nonStringField}' must be type String`));cov_1375786svd.s[16]++;err.status=422;cov_1375786svd.s[17]++;return next(err);}else{cov_1375786svd.b[2][1]++;}// If the email and password aren't trimmed we give an error. 
const explicityTrimmedFields=(cov_1375786svd.s[18]++,['email','password']);const nonTrimmedField=(cov_1375786svd.s[19]++,explicityTrimmedFields.find(field=>{cov_1375786svd.f[3]++;cov_1375786svd.s[20]++;return req.body[field].trim()!==req.body[field];}));cov_1375786svd.s[21]++;if(nonTrimmedField){cov_1375786svd.b[3][0]++;const err=(cov_1375786svd.s[22]++,new Error(`Field: '${nonTrimmedField}' cannot start or end with whitespace`));cov_1375786svd.s[23]++;err.status=422;cov_1375786svd.s[24]++;return next(err);}else{cov_1375786svd.b[3][1]++;}// bcrypt truncates after 72 characters
const sizedFields=(cov_1375786svd.s[25]++,{email:{min:1},password:{min:8,max:72}});const tooSmallField=(cov_1375786svd.s[26]++,Object.keys(sizedFields).find(field=>{cov_1375786svd.f[4]++;cov_1375786svd.s[27]++;return(cov_1375786svd.b[4][0]++,'min'in sizedFields[field])&&(cov_1375786svd.b[4][1]++,//if min is a key in 'email'
req.body[field].trim().length<sizedFields[field].min);}));cov_1375786svd.s[28]++;if(tooSmallField){cov_1375786svd.b[5][0]++;const min=(cov_1375786svd.s[29]++,sizedFields[tooSmallField].min);const err=(cov_1375786svd.s[30]++,new Error(`Field: '${tooSmallField}' must be at least ${min} characters long`));cov_1375786svd.s[31]++;err.status=422;cov_1375786svd.s[32]++;return next(err);}else{cov_1375786svd.b[5][1]++;}const tooLargeField=(cov_1375786svd.s[33]++,Object.keys(sizedFields).find(field=>{cov_1375786svd.f[5]++;cov_1375786svd.s[34]++;return(cov_1375786svd.b[6][0]++,'max'in sizedFields[field])&&(cov_1375786svd.b[6][1]++,req.body[field].trim().length>sizedFields[field].max);}));cov_1375786svd.s[35]++;if(tooLargeField){cov_1375786svd.b[7][0]++;const max=(cov_1375786svd.s[36]++,sizedFields[tooLargeField].max);const err=(cov_1375786svd.s[37]++,new Error(`Field: '${tooLargeField}' must be at most ${max} characters long`));cov_1375786svd.s[38]++;err.status=422;cov_1375786svd.s[39]++;return next(err);}else{cov_1375786svd.b[7][1]++;}// email and password were validated as pre-trimmed
let{email,password,firstName=(cov_1375786svd.b[8][0]++,''),lastName=(cov_1375786svd.b[9][0]++,'')}=(cov_1375786svd.s[40]++,req.body);cov_1375786svd.s[41]++;firstName=firstName.trim();cov_1375786svd.s[42]++;lastName=lastName.trim();// Remove explicit hashPassword if using pre-save middleware
cov_1375786svd.s[43]++;return User.hashPassword(password).then(digest=>{cov_1375786svd.f[6]++;const newUser=(cov_1375786svd.s[44]++,{email,password:digest,firstName,lastName});cov_1375786svd.s[45]++;return User.create(newUser);}).then(result=>{cov_1375786svd.f[7]++;cov_1375786svd.s[46]++;return res.status(201).location(`/api/users/${result.id}`).json(result);}).catch(err=>{cov_1375786svd.f[8]++;cov_1375786svd.s[47]++;if(err.code===11000){cov_1375786svd.b[10][0]++;cov_1375786svd.s[48]++;err=new Error('The email already exists');cov_1375786svd.s[49]++;err.status=400;}else{cov_1375786svd.b[10][1]++;}cov_1375786svd.s[50]++;next(err);});});cov_1375786svd.s[51]++;module.exports=router;